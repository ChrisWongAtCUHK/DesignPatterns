package dp.interpreter;import java.util.*;import java.io.*;public class Context{	private Iterator<String> tokens;	private String currentToken;		// Constructor	public Context(String filename) throws IOException{		List<String> tokenList = new ArrayList<String>();		BufferedReader reader = new BufferedReader(new FileReader(filename));		String input = null;		while((input = reader.readLine()) != null){			for(String token: input.trim().split("\\s+")){				tokenList.add(token);			}		}				reader.close();		this.tokens = tokenList.iterator();		nextToken();	}		public String nextToken(){		this.currentToken = null;		if(this.tokens.hasNext()){			this.currentToken = this.tokens.next();		}				return this.currentToken;	}		public String currentToken(){		return this.currentToken;	}		public void skipToken(String token){		if(!token.equals(currentToken)){			System.err.println("Warning: " + token + " is expected, but " + this.currentToken +  " is found.");					}		nextToken();	}		public int currentNumber(){		return Integer.parseInt(this.currentToken);	}}